'''
그리디 알고리즘 및 정렬 문제
풀이 아이디어
유치원생 키의 배열을 L이라 하고, 각 조의 마지막 원생의 index를 i1, i2, i3, ..., ik=n-1 라 하면,
티셔츠의 비용은 L[0]-L[i1]+L[i1+1]-L[i2]+L[i2+1]-L[i3]+L[i3+1]-...-L[n-1]
= L[0] - (L[i1]-L[i1+1]) - (L[i2]+L[i2+1]) - (L[i3]+L[i3+1]) - ... - L[n-1]
가 된다.
이 값의 최솟값은 L[0] - L[n-1]의 값 a를 구한 뒤, 
배열에서 인접한 두 키의 차이를 전부 구한 후 그 값을 가장 큰 것부터 k를 a에 빼주면 된다.
'''

n,k=map(int,input().split())
L=[*map(int,input().split())]
s=[]
for i in range(n-1):s+=[L[i+1]-L[i]] #인접한 유치원생의 키 차이를 s에 저장
s.sort() #s를 오름차수 정렬
a=L[-1]-L[0]
for i in range(k-1):a-=s.pop() #s의 가장 뒤 원소 = 가장 큰 값들을 a에 빼주기
print(a)
